{"mappings":"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","sources":["hkcwby/calc/app.js"],"sourcesContent":["let currentDisplayValue = \"0\";\nlet storedNumber = 0;\nlet otherNumber = 0;\nlet decimal = false;\nlet integerValue = 0;\nlet decimalValue = \"\";\nlet cleared = false;\nlet operation = \"\";\n\nlet display = document.querySelector(\"#display-value\");\n\n//creating a click animation to be used on all buttons and provide the user feedback\nfunction animate(e){\n  e.target.classList.add(\"clicked\");\n  setTimeout(() => {\n      e.target.classList.remove(\"clicked\");\n    }, \"100\")\n}\n\n\n//function for toggling to decimal place mode.\nfunction decimalToggle(e){\n  animate(e);\n  decimal = true;\n}\n\n//function for clearing present values or to clear the full memory on a double tap.\n\nfunction clearing(e){\n  //animate the click for user feedback\n  animate(e);\n  //if this is the first press just clear current values\n  if(!cleared){\n    currentDisplayValue=0;\n    display.innerHTML=currentDisplayValue;\n    integerValue=0;\n    decimalValue=\"\";\n    decimal=false;\n    cleared=true;\n  }\n  //if its the second press reset all the stored memory\n  else{\n    integerValue=0;\n    decimalValue=\"\";\n    decimal=false;\n    cleared=true;\n    otherNumber=null;\n    storedNumber=null;\n    operation=\"\";\n  }\n\n\n}\n\n\nfunction entry(e){\n  //animate the click for user feedback\n  animate(e);\n\n  //if the cleared button has been pressed once it needs to be reset\n  cleared = false;\n  //if in decimal mode we must add values in a slightly more laborious manner that imitates a physical calculator display\n  if(decimal){\n    decimalValue=decimalValue.concat(String(e.target.innerHTML));\n    currentDisplayValue = Number(String(integerValue).concat(\".\",decimalValue));\n    display.innerHTML=String(integerValue).concat(\".\",decimalValue);\n\n  }\n  //otherwise its a simple operation of just adding on the next number\n  else{\n    integerValue = (integerValue*10) + Number(e.target.innerHTML);\n    currentDisplayValue=integerValue;\n    display.innerHTML=String(currentDisplayValue);\n  }\n}\n\n\nfunction operate(e){\n  //animate the click for user feedback\n  animate(e);\n  //store the desired operation\n  operation = e.target.innerHTML;\n  //store the first number in the operation\n  otherNumber = currentDisplayValue;\n  //reset the values\n  cleared=false;\n  integerValue = 0;\n  decimalValue = \"\";\n  currentDisplayValue=0;\n  display.innerHTML=String(currentDisplayValue);\n\n  console.log(otherNumber);\n\n}\n\nfunction signSetting(e){\n  //animate the click for user feedback\n  animate(e);\n\n  if(integerValue) integerValue=integerValue*-1;\n  console.log(integerValue);\n\n  if(decimal){\n    currentDisplayValue = Number(String(integerValue).concat(\".\",decimalValue));\n    display.innerHTML=String(integerValue).concat(\".\",decimalValue);\n  }\n  else{\n    currentDisplayValue=integerValue;\n    display.innerHTML=String(currentDisplayValue);\n  }\n}\n\nfunction squareRoot(e){\n  animate(e);\n  console.log(\"triggered\");\n  currentDisplayValue= Math.sqrt(currentDisplayValue);\n    display.innerHTML=String(currentDisplayValue);\n\n\n\n}\n\n\nfunction calculate(firstValue,secondValue,operationValue){\n  let output = 0; \n  switch(operationValue){\n    case \"+\": \n      output = firstValue + secondValue;\n      break;\n    case \"-\": \n      output = firstValue - secondValue;\n      break;\n    case \"÷\": \n      output = firstValue / secondValue;\n      break;\n    case \"×\": \n      output = firstValue * secondValue;\n      break;\n    case \"Δ%\": \n      output = ((firstValue - secondValue)/secondValue)*100;\n      break;\n    case \"%\": \n      output = firstValue * (1*(secondValue/100));\n      break;\n  }\n\n  return output;\n\n}\n\nfunction equals(e){\n  //animate the click for user feedback\n  animate(e);\n  console.log(otherNumber,currentDisplayValue,operation);\n\n  if(otherNumber && operation){\n    currentDisplayValue = calculate(otherNumber,currentDisplayValue,operation);\n    display.innerHTML=String(currentDisplayValue);\n    otherNumber = null;\n  }\n\n}\n"],"names":[],"version":3,"file":"index.7bf601fc.js.map","sourceRoot":"/__parcel_source_root/"}