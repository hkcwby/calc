{"mappings":"AAAA,IAAI,sBAAsB;AAC1B,IAAI,eAAe,IAAI;AACvB,IAAI,cAAc,IAAI;AACtB,IAAI,UAAU,KAAK;AACnB,IAAI,eAAe;AACnB,IAAI,eAAe;AACnB,IAAI,UAAU,KAAK;AACnB,IAAI,YAAY;AAEhB,IAAI,UAAU,SAAS,aAAa,CAAC;AAErC,oFAAoF;AACpF,SAAS,QAAQ,CAAC,EAAC;IACjB,EAAE,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC;IACvB,QAAQ,GAAG,CAAC,EAAE,MAAM,CAAC,SAAS;IAC9B,WAAW,IAAM;QACb,EAAE,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC;IAC5B,GAAG;AACP;AAGA,8CAA8C;AAC9C,SAAS,cAAc,CAAC,EAAC;IACvB,QAAQ;IACR,UAAU,IAAI;AAChB;AAEA,mFAAmF;AAEnF,SAAS,SAAS,CAAC,EAAC;IAClB,qCAAqC;IACrC,QAAQ;IACR,sDAAsD;IACtD,IAAG,CAAC,SAAQ;QACV,sBAAoB;QACpB,QAAQ,SAAS,GAAC;QAClB,eAAa;QACb,eAAa;QACb,UAAQ,KAAK;QACb,UAAQ,IAAI;IACd,OAEI;QACF,eAAa;QACb,eAAa;QACb,UAAQ,KAAK;QACb,UAAQ,IAAI;QACZ,cAAY,IAAI;QAChB,eAAa,IAAI;QACjB,YAAU;IACZ,CAAC;AAGH;AAGA,SAAS,MAAM,CAAC,EAAC;IACf,qCAAqC;IACrC,QAAQ;IAER,kEAAkE;IAClE,UAAU,KAAK;IACf,uHAAuH;IACvH,IAAG,SAAQ;QACT,eAAa,aAAa,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,SAAS;QAE1D,QAAQ,GAAG,CAAC;QACZ,QAAQ,GAAG,CAAC,OAAO,qBAAqB,MAAM,CAAC,KAAI;QAEnD,sBAAsB,OAAO,OAAO,cAAc,MAAM,CAAC,KAAI;QAC7D,QAAQ,SAAS,GAAC,OAAO,cAAc,MAAM,CAAC,KAAI;IAEpD,OAEI;QACF,eAAe,AAAC,eAAa,KAAM,OAAO,EAAE,MAAM,CAAC,SAAS;QAC5D,sBAAoB;QACpB,QAAQ,SAAS,GAAC,OAAO;IAC3B,CAAC;AACH;AAGA,SAAS,QAAQ,CAAC,EAAC;IACjB,qCAAqC;IACrC,QAAQ;IACR,YAAY,EAAE,MAAM,CAAC,SAAS;AAEhC","sources":["hkcwby/calc/app.js"],"sourcesContent":["let currentDisplayValue = \"0\";\nlet storedNumber = null;\nlet otherNumber = null;\nlet decimal = false;\nlet integerValue = 0;\nlet decimalValue = \"\";\nlet cleared = false;\nlet operation = \"\";\n\nlet display = document.querySelector(\"#display-value\");\n\n//creating a click animation to be used on all buttons and provide the user feedback\nfunction animate(e){\n  e.target.classList.add(\"clicked\");\n  console.log(e.target.classList);\n  setTimeout(() => {\n      e.target.classList.remove(\"clicked\");\n    }, \"100\")\n}\n\n\n//function for toggling to decimal place mode.\nfunction decimalToggle(e){\n  animate(e);\n  decimal = true;\n}\n\n//function for clearing present values or to clear the full memory on a double tap.\n\nfunction clearing(e){\n  //animate the click for user feedback\n  animate(e);\n  //if this is the first press just clear current values\n  if(!cleared){\n    currentDisplayValue=0;\n    display.innerHTML=currentDisplayValue;\n    integerValue=0;\n    decimalValue=\"\";\n    decimal=false;\n    cleared=true;\n  }\n  //if its the second press reset all the stored memory\n  else{\n    integerValue=0;\n    decimalValue=\"\";\n    decimal=false;\n    cleared=true;\n    otherNumber=null;\n    storedNumber=null;\n    operation=\"\";\n  }\n\n\n}\n\n\nfunction entry(e){\n  //animate the click for user feedback\n  animate(e);\n\n  //if the cleared button has been pressed once it needs to be reset\n  cleared = false;\n  //if in decimal mode we must add values in a slightly more laborious manner that imitates a physical calculator display\n  if(decimal){\n    decimalValue=decimalValue.concat(String(e.target.innerHTML));\n  \n    console.log(decimalValue);\n    console.log(String(currentDisplayValue).concat(\".\",decimalValue))\n\n    currentDisplayValue = Number(String(integerValue).concat(\".\",decimalValue));\n    display.innerHTML=String(integerValue).concat(\".\",decimalValue);\n\n  }\n  //otherwise its a simple operation of just adding on the next number\n  else{\n    integerValue = (integerValue*10) + Number(e.target.innerHTML);\n    currentDisplayValue=integerValue;\n    display.innerHTML=String(currentDisplayValue);\n  }\n}\n\n\nfunction operate(e){\n  //animate the click for user feedback\n  animate(e);\n  operation = e.target.innerHTML;\n\n}\n\n"],"names":[],"version":3,"file":"index.7bf601fc.js.map","sourceRoot":"/__parcel_source_root/"}